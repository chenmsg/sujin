<#@ template  debug="true" hostSpecific="true" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="System.Core" #>
<#@ Assembly Name="System.Windows.Forms" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #> 
<#@ include file="MY_SQL_MultipleOutputHelper.ttinclude" #>
<#  
// 初始化
var manager = Manager.Create(Host, GenerationEnvironment);  
foreach(DbTable dbtable in DbHelper.GetDbTables(config.ConnectionString,config.DbDatabase))//循环数据库表
{//循环数据表开始
	//逍遥法外
	if(config.atlarge.Contains( ","+dbtable.TableName+","))
    {
		break;
	}
#>

<# 
manager.StartNewFile(dbtable.EntityName+".cs");//定义输出文件名称
#>
<# 
//开始--------------------------------------------------------------------------------------------
#>
<#
	string field ="";//表字段
	foreach(DbColumn column in DbHelper.GetDbColumns(config.ConnectionString, config.DbDatabase, dbtable.TableName)){ 
	if(field==""){
	  field += column.ColumnName;
	}else{
	  field += ","+column.ColumnName;
	}
}#>
//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的...
//    生成时间 <#=string.Format("{0:yyyy-MM-dd HH:mm:ss}",DateTime.Now)#> By CClump
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using ITOrm.Core.Dapper;
using System.Runtime.Serialization;
namespace ITOrm.Host.Models
{
    /// <summary>
    /// <#=dbtable.TableComment#>
    /// </summary>
    [Serializable]
	[Table("<#=dbtable.TableName#>")]
    public class <#=dbtable.EntityName#> : BaseEntity
    {
        #region Entity Field
        <#foreach(DbColumn column in DbHelper.GetDbColumns(config.ConnectionString, config.DbDatabase, dbtable.TableName)){#>
private <#= column.CSharpType#> _<#=column.ColumnName.ToLower()#> = <#=column.DefaultValue#>;
		/// <summary>
        /// <#=column.Remark#>
        /// </summary>
        <#if(column.IsPrimaryKey){#>[Key]<#}#>
		[DataMember(Order = 0)]
		public <#= column.CSharpType#> <#=column.ColumnName#> { get{return _<#=column.ColumnName.ToLower()#>;} set{_<#=column.ColumnName.ToLower()#>=value;} }
	    <#}#>

		#endregion

        #region 字段名信息 方便调用
        /// <summary>
        /// 数据表“WS_Log”的相关信息[数据库名、表名及字段名]
        /// </summary>
        [Serializable]
        public struct _
        {
            /// <summary>
            /// 数据库名
            /// </summary>
            public readonly static string DataBaseName = "<#=config.DbDatabase#>";

            /// <summary>
            /// 表名
            /// </summary>
            public readonly static string TableName = "<#=dbtable.TableName#>";

            /// <summary>
            /// 所有字段
            /// </summary>
            public readonly static string All = "<#=field#>";
            <#foreach(DbColumn column in DbHelper.GetDbColumns(config.ConnectionString, config.DbDatabase, dbtable.TableName)){#>

            /// <summary>
            /// <#=column.Remark#>
            /// </summary>
            public readonly static string <#=column.ColumnName#> = "<#=column.ColumnName#>";
            <#}#>

        }
        #endregion
    }
}

<# 
//结束--------------------------------------------------------------------------------------------
#>
<#
manager.EndBlock();//结束输出文件
#>

<#
}//循环数据表结束
#>
       
<#
manager.Process(true);//执行编译  
#> 

<#+
    public class config
    {
        public static readonly string ConnectionString="Data Source=122.14.218.15,55531;Initial Catalog=SujinDB;User ID=sa;Password=sujin@ITORM.COM";
        public static readonly string DbDatabase="SujinDB";
				//逍遥法外,view_Modules,
		public static readonly string atlarge="";
    }
#>